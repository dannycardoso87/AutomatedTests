<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="13" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="164950" started-at="2020-03-26T21:06:03 EDT" finished-at="2020-03-26T21:08:48 EDT">
    <groups>
    </groups>
    <test name="Default test" duration-ms="164950" started-at="2020-03-26T21:06:03 EDT" finished-at="2020-03-26T21:08:48 EDT">
      <class name="src.com.example.tests.RegressionTestPCS">
        <test-method status="PASS" signature="setUp()[pri:0, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="setUp" is-config="true" duration-ms="9730" started-at="2020-03-26T21:06:03 EDT" finished-at="2020-03-26T21:06:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="TC001loginValidatePCS()[pri:1, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC001loginValidatePCS" duration-ms="1712" started-at="2020-03-26T21:06:13 EDT" finished-at="2020-03-26T21:06:14 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC001loginValidatePCS -->
        <test-method status="PASS" signature="TC002createNodePCS()[pri:2, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC002createNodePCS" duration-ms="3577" started-at="2020-03-26T21:06:14 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC001loginValidatePCS" finished-at="2020-03-26T21:06:18 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC002createNodePCS -->
        <test-method status="PASS" signature="TC003createExistingNode()[pri:3, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC003createExistingNode" duration-ms="1" started-at="2020-03-26T21:06:18 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC002createNodePCS" finished-at="2020-03-26T21:06:18 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC003createExistingNode -->
        <test-method status="PASS" signature="TC004deleteNode()[pri:4, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC004deleteNode" duration-ms="0" started-at="2020-03-26T21:06:18 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC003createExistingNode" finished-at="2020-03-26T21:06:18 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC004deleteNode -->
        <test-method status="PASS" signature="TC005editNode()[pri:5, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC005editNode" duration-ms="18558" started-at="2020-03-26T21:06:18 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC004deleteNode" finished-at="2020-03-26T21:06:37 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC005editNode -->
        <test-method status="PASS" signature="TC006statusCheck()[pri:6, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC006statusCheck" duration-ms="36130" started-at="2020-03-26T21:06:37 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC005editNode" finished-at="2020-03-26T21:07:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC006statusCheck -->
        <test-method status="PASS" signature="TC007stopSchedulerAllNodes()[pri:7, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC007stopSchedulerAllNodes" duration-ms="19595" started-at="2020-03-26T21:07:13 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC006statusCheck" finished-at="2020-03-26T21:07:32 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC007stopSchedulerAllNodes -->
        <test-method status="PASS" signature="TC008setGlobalUnitMeasure()[pri:8, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC008setGlobalUnitMeasure" duration-ms="1083" started-at="2020-03-26T21:07:32 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC007stopSchedulerAllNodes" finished-at="2020-03-26T21:07:33 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC008setGlobalUnitMeasure -->
        <test-method status="PASS" signature="TC009statusCheck()[pri:9, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC009statusCheck" duration-ms="39608" started-at="2020-03-26T21:07:33 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC008setGlobalUnitMeasure" finished-at="2020-03-26T21:08:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC009statusCheck -->
        <test-method status="PASS" signature="TC010getSnapshot()[pri:10, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC010getSnapshot" duration-ms="31191" started-at="2020-03-26T21:08:13 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC009statusCheck" finished-at="2020-03-26T21:08:44 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC010getSnapshot -->
        <test-method status="PASS" signature="TC011setCycleTime()[pri:11, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC011setCycleTime" duration-ms="0" started-at="2020-03-26T21:08:44 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC010getSnapshot" finished-at="2020-03-26T21:08:44 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC011setCycleTime -->
        <test-method status="PASS" signature="TC012deleteAllNodes()[pri:12, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC012deleteAllNodes" duration-ms="2094" started-at="2020-03-26T21:08:44 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC011setCycleTime" finished-at="2020-03-26T21:08:46 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC012deleteAllNodes -->
        <test-method status="PASS" signature="TC013setGlobalUnitMeasureToInches()[pri:13, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="TC013setGlobalUnitMeasureToInches" duration-ms="1022" started-at="2020-03-26T21:08:46 EDT" depends-on-methods="src.com.example.tests.RegressionTestPCS.TC012deleteAllNodes" finished-at="2020-03-26T21:08:47 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC013setGlobalUnitMeasureToInches -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:src.com.example.tests.RegressionTestPCS@3108bc]" name="tearDown" is-config="true" duration-ms="632" started-at="2020-03-26T21:08:47 EDT" finished-at="2020-03-26T21:08:48 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- src.com.example.tests.RegressionTestPCS -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
